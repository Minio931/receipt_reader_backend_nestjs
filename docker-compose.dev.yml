services:
  api:
    build:
      context: .
      target: development
    command: npm run start:dev
    entrypoint: ["/usr/bin/tini","--"]
    user: "${UID:-1000}:${GID:-1000}"
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      backend:
        ipv4_address: 10.10.0.10

  postgres:
    image: postgres:16
    container_name: dev-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      backend:
        ipv4_address: 10.10.0.11

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/24

volumes:
  pgdata:
  node_modules:
